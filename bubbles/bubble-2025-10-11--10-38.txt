Me:

请润色下面的文字，使其更通顺且逻辑更清晰：【本项目目前已经实现了通用的icmwriper-5的功能。现在请你阅读 @icm-context-2025-10-05--23-56.md ，然后基于这个文件描述的当前的上下文，为我针对Windows 11的WSL2中的ubuntu 24.04操作系统在原有的`icmwriper-5-for-ubuntu`命令的功能的基础上，增加一个`generate-html-data-dashboard`的子命令，使得当我在ubuntu 24.04里运行`icmwriper-5-for-ubuntu generate-html-data-dashboard &lt;project-name&gt;`后（其中`&lt;project-name&gt;`为用户输入的实际项目名称），该命令应在当前目录下创建名为`&lt;project-name&gt;`的文件夹，并从GitHub仓库`https://github.com/wubin28/ICMwRIPER-5`的`main`分支的根目录下复制以下4个源文件到该文件夹：

`icm-bubble-template.md; icm-story-template.md; icmwriper-5.md; README.md`

然后，将复制的`README.md`文件重命名为`icmwriper-5-README.md`。

之后，再从`main`分支的`for-py-html-css-js-by-data-dashboard`目录下复制以下2个源文件到刚刚创建的`&lt;project-name&gt;`文件夹：

`first-80-rows-agentic_ai_performance_dataset_20250622.xlsx; .gitignore`

注意，你在实现上述新功能后，本项目之前所具备的所有原有的功能仍然能正常使用。】


sider with claude sonnet 4.5

以下是润色后的文字：

---

本项目目前已实现 icmwriper-5 的通用功能。现在请你阅读 @icm-context-2025-10-05--23-56.md，然后基于该文件描述的当前上下文，为 Windows 11 的 WSL2 中的 Ubuntu 24.04 操作系统扩展 `icmwriper-5-for-ubuntu` 命令的功能。

**新增功能需求：**

添加一个 `generate-html-data-dashboard` 子命令，实现以下功能：

1. **命令格式：** `icmwriper-5-for-ubuntu generate-html-data-dashboard <project-name>`
   - 其中 `<project-name>` 为用户输入的实际项目名称

2. **执行步骤：**
   
   **步骤 1：创建项目目录**
   - 在当前目录下创建名为 `<project-name>` 的文件夹

   **步骤 2：复制根目录文件**
   - 从 GitHub 仓库 `https://github.com/wubin28/ICMwRIPER-5` 的 `main` 分支根目录下复制以下 4 个文件到项目文件夹：
     - `icm-bubble-template.md`
     - `icm-story-template.md`
     - `icmwriper-5.md`
     - `README.md`

   **步骤 3：重命名文件**
   - 将复制的 `README.md` 重命名为 `icmwriper-5-README.md`

   **步骤 4：复制子目录文件**
   - 从 `main` 分支的 `for-py-html-css-js-by-data-dashboard` 目录下复制以下 2 个文件到 `<project-name>` 文件夹：
     - `first-80-rows-agentic_ai_performance_dataset_20250622.xlsx`
     - `.gitignore`

**重要提示：** 实现上述新功能后，项目原有的所有功能必须保持正常可用。

---

**主要改进点：**
1. 将功能需求与实现步骤分离，结构更清晰
2. 使用编号列表明确执行顺序
3. 为每个步骤添加了小标题，便于快速定位
4. 将文件列表格式化为项目符号，提高可读性
5. 最后的注意事项单独突出强调
