#!/usr/bin/env bash

# Argument count validation
if [ $# -ne 2 ]; then
    echo "Usage: icmwriper-5 {generate <project-name> | generate-html-data-dashboard <project-name> | story <story-name> | bubble <bubble-name> | snb <story-name>}"
    exit 1
fi

# Subcommand routing
if [ "$1" = "generate" ]; then
    # Generate subcommand handler
    # Store project name
    PROJECT_NAME="$2"

    # Directory existence check
    if [ -d "$PROJECT_NAME" ]; then
        echo "Error: Directory '$PROJECT_NAME' already exists."
        exit 1
    fi

    # GitHub repository configuration
    GITHUB_RAW_URL="https://raw.githubusercontent.com/wubin28/ICMwRIPER-5/main"
    FILES=("icm-bubble-template.md" "icm-story-template.md" "icmwriper-5.md" "README.md")

    # Create project directory
    if ! mkdir "$PROJECT_NAME"; then
        echo "Error: Failed to create directory '$PROJECT_NAME'."
        exit 1
    fi

    # Download files
    for filename in "${FILES[@]}"; do
        url="$GITHUB_RAW_URL/$filename"
        if ! curl -f -sS -o "$PROJECT_NAME/$filename" "$url"; then
            echo "Error: Failed to download $filename from GitHub. Please check your internet connection and repository availability."
            rm -rf "$PROJECT_NAME"
            exit 1
        fi
    done

    # Rename README.md
    mv "$PROJECT_NAME/README.md" "$PROJECT_NAME/icmwriper-5-README.md"

    # Success message
    echo "Success: Project '$PROJECT_NAME' created with ICMwRIPER-5 template files."
    exit 0

elif [ "$1" = "story" ]; then
    # Story subcommand handler
    # Store story name
    STORY_NAME="$2"

    # Check if source file exists
    if [ ! -f "$STORY_NAME" ]; then
        echo "Error: File '$STORY_NAME' does not exist."
        exit 1
    fi

    # Generate timestamp
    TIMESTAMP=$(date +"%Y-%m-%d--%H-%M")

    # Define target filename
    TARGET_FILE="icm-story-$TIMESTAMP.md"

    # Copy file
    if ! cp "$STORY_NAME" "$TARGET_FILE"; then
        echo "Error: Failed to copy '$STORY_NAME' to '$TARGET_FILE'."
        exit 1
    fi

    # Success message
    echo "Success: Copied '$STORY_NAME' to '$TARGET_FILE'."
    exit 0

elif [ "$1" = "bubble" ]; then
    # Bubble subcommand handler
    # Store bubble name
    BUBBLE_NAME="$2"

    # Check if source file exists
    if [ ! -f "$BUBBLE_NAME" ]; then
        echo "Error: File '$BUBBLE_NAME' does not exist."
        exit 1
    fi

    # Find the latest icm-story-*.md file
    LATEST_STORY=$(ls -t icm-story-*.md 2>/dev/null | head -1)

    # Check if any story file exists
    if [ -z "$LATEST_STORY" ]; then
        echo "Error: No icm-story-*.md files found in current directory."
        exit 1
    fi

    # Extract timestamp from the latest story filename
    # Remove "icm-story-" prefix and ".md" suffix
    TIMESTAMP="${LATEST_STORY#icm-story-}"
    TIMESTAMP="${TIMESTAMP%.md}"

    # Define target filename
    TARGET_FILE="icm-bubble-$TIMESTAMP.md"

    # Copy file
    if ! cp "$BUBBLE_NAME" "$TARGET_FILE"; then
        echo "Error: Failed to copy '$BUBBLE_NAME' to '$TARGET_FILE'."
        exit 1
    fi

    # Replace the story reference with the latest story filename
    # Match both numeric timestamps and the template placeholder format
    sed -i "s/@icm-story-\([0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}--[0-9]\{2\}-[0-9]\{2\}\|yyyy-mm-dd--hh-mm\)\.md/@$LATEST_STORY/g" "$TARGET_FILE"

    # Success message
    echo "Success: Copied '$BUBBLE_NAME' to '$TARGET_FILE' and updated story reference to '$LATEST_STORY'."
    exit 0

elif [ "$1" = "snb" ]; then
    # SNB (Story aNd Bubble) subcommand handler
    # Store story name
    STORY_NAME="$2"

    # Check if source story file exists
    if [ ! -f "$STORY_NAME" ]; then
        echo "Error: File '$STORY_NAME' does not exist."
        exit 1
    fi

    # Check if bubble template exists
    if [ ! -f "icm-bubble-template.md" ]; then
        echo "Error: File 'icm-bubble-template.md' does not exist."
        exit 1
    fi

    # Generate timestamp (will be used for both files)
    TIMESTAMP=$(date +"%Y-%m-%d--%H-%M")

    # Define target filenames
    STORY_TARGET="icm-story-$TIMESTAMP.md"
    BUBBLE_TARGET="icm-bubble-$TIMESTAMP.md"

    # Copy story file
    if ! cp "$STORY_NAME" "$STORY_TARGET"; then
        echo "Error: Failed to copy '$STORY_NAME' to '$STORY_TARGET'."
        exit 1
    fi

    # Copy bubble file
    if ! cp "icm-bubble-template.md" "$BUBBLE_TARGET"; then
        echo "Error: Failed to copy 'icm-bubble-template.md' to '$BUBBLE_TARGET'."
        # Cleanup: remove the story file that was already created
        rm -f "$STORY_TARGET"
        exit 1
    fi

    # Replace the story reference with the newly created story filename
    # Match both numeric timestamps and the template placeholder format
    sed -i "s/@icm-story-\([0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}--[0-9]\{2\}-[0-9]\{2\}\|yyyy-mm-dd--hh-mm\)\.md/@$STORY_TARGET/g" "$BUBBLE_TARGET"

    # Success message
    echo "Success: Copied '$STORY_NAME' to '$STORY_TARGET'."
    echo "Success: Copied 'icm-bubble-template.md' to '$BUBBLE_TARGET' and updated story reference to '$STORY_TARGET'."
    exit 0

elif [ "$1" = "generate-html-data-dashboard" ]; then
    # Generate HTML Data Dashboard subcommand handler
    # Store project name
    PROJECT_NAME="$2"

    # Directory existence check
    if [ -d "$PROJECT_NAME" ]; then
        echo "Error: Directory '$PROJECT_NAME' already exists."
        exit 1
    fi

    # GitHub repository configuration
    GITHUB_RAW_URL="https://raw.githubusercontent.com/wubin28/ICMwRIPER-5/main"

    # Define files to download with their paths
    # Root files (4 files)
    ROOT_FILES=("icm-bubble-template.md" "icm-story-template.md" "icmwriper-5.md" "README.md")

    # Subdirectory files (2 files)
    SUBDIR_FILES=("for-py-html-css-js-by-data-dashboard/first-80-rows-agentic_ai_performance_dataset_20250622.xlsx" "for-py-html-css-js-by-data-dashboard/.gitignore")

    # Create project directory
    if ! mkdir "$PROJECT_NAME"; then
        echo "Error: Failed to create directory '$PROJECT_NAME'."
        exit 1
    fi

    # Download root files
    for filename in "${ROOT_FILES[@]}"; do
        url="$GITHUB_RAW_URL/$filename"
        if ! curl -f -sS -o "$PROJECT_NAME/$filename" "$url"; then
            echo "Error: Failed to download $filename from GitHub. Please check your internet connection and repository availability."
            rm -rf "$PROJECT_NAME"
            exit 1
        fi
    done

    # Download subdirectory files
    for filepath in "${SUBDIR_FILES[@]}"; do
        # Extract just the filename for the target
        filename=$(basename "$filepath")
        url="$GITHUB_RAW_URL/$filepath"
        if ! curl -f -sS -o "$PROJECT_NAME/$filename" "$url"; then
            echo "Error: Failed to download $filepath from GitHub. Please check your internet connection and repository availability."
            rm -rf "$PROJECT_NAME"
            exit 1
        fi
    done

    # Rename README.md
    mv "$PROJECT_NAME/README.md" "$PROJECT_NAME/icmwriper-5-README.md"

    # Success message
    echo "Success: Project '$PROJECT_NAME' created with ICMwRIPER-5 template files and HTML data dashboard resources."
    exit 0
else
    echo "Error: Unknown command '$1'. Supported commands: 'generate', 'generate-html-data-dashboard', 'story', 'bubble', 'snb'."
    exit 1
fi
